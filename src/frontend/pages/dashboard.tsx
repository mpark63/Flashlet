import { type NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router"; 
import { useEffect, useState } from "react";
import { useDispatch, useSelector } from 'react-redux';
import { type Deck } from "../utils/commonTypes";
import DeckJSX from "../components/DeckJSX";
import Header from "../components/Header";
import { selectCurrentUser, selectDecks, updateCurrentDeck, updateDecks } from "../slices/appSlice";
import axios from "axios";
import { getAPI } from "../utils/assets";

const Dashboard: NextPage = () => {
  const user = useSelector(selectCurrentUser); 
  const decks = useSelector(selectDecks); 
  const [decksJSX, setDecksJSX] = useState<JSX.Element[]>([]); 
  const router = useRouter();
  const dispatch = useDispatch();

  const handleNew = async () => {
    if (user._id === "guest") router.push('/deck/new'); 
    // make new deck 
    const res = await axios.post(getAPI(window) + `/decks`, {
      name: "New deck", 
      description: "Describe your new deck!", 
      userId: user._id
    }); 
    const deck: Deck = res.data.data; 
    dispatch(updateCurrentDeck(deck));
    let newDecks = [...decks, deck]; 
    dispatch(updateDecks(newDecks)); 
    // navigate to deck with id 
    router.push(`/deck/${deck._id}`); 
  }

  useEffect(() => {
    const decksJSX = getDecksJSX(decks);
    setDecksJSX(decksJSX); 
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [decks]);

  const getDecksJSX = (decks): JSX.Element[] => {
    if (user._id === "guest") return [];
    const divs = decks.map((deck: Deck) => {
      return (
        <>
          <DeckJSX deck={deck} /> 
        </>
      );
    });
    return divs;
  };

  return (
    <>
      <Head>
        <title>Dashboard</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <Header /> 
        <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
          My Decks
        </h1>
        <h3 className="font-extrabold tracking-tight text-white sm:text-[2rem]">
          Signed in as {user._id}
        </h3>
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <button onClick={handleNew} className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20">
              <h3 className="text-2xl font-bold">New deck +</h3>
            </button>
            {decks && decks.length ? (
              <div className="flex flex-row gap-1.5">{decksJSX}</div>
            ) : (
              <DeckJSX deck={undefined} /> 
            ) }
          </div>
        </div>
      </main>
    </>
  );
};

export default Dashboard;
